version: '3.7'

networks:
  bridge:
    driver: bridge

services:
  app:
    depends_on:
      - postgresql
      - redis
    environment: &mayan_env
      MAYAN_CELERY_BROKER_URL: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@redis:6379/0
      MAYAN_CELERY_RESULT_BACKEND: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@redis:6379/1
      MAYAN_DATABASES: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'${MAYAN_DATABASE_DB:-mayan}','PASSWORD':'${MAYAN_DATABASE_PASSWORD:-mayandbpass}','USER':'${MAYAN_DATABASE_USER:-mayan}','HOST':'postgresql'}}"
      MAYAN_DOCKER_WAIT: "postgresql:5432 redis:6379"
      # To add operating system packages, like additional OCR language,
      # packages, put then in the variable below.
      # MAYAN_APT_INSTALLS: "tesseract-ocr-deu tesseract-ocr-nld"
      # To add Python libraries, like LDAP, put then in the variable below.
      # MAYAN_PIP_INSTALLS: "python-ldap"
    image: mayanedms/mayanedms:3
    networks:
      - bridge
    ports:
      - "80:8000"
    restart: unless-stopped
    volumes:
      - ${MAYAN_APP_VOLUME:-app}:/var/lib/mayan
      # Optional volumes to access external data like staging or watch folders
      # - /opt/staging_files:/staging_files
      # - /opt/watch_folder:/watch_folder

  postgresql:
    environment:
      POSTGRES_DB: ${MAYAN_DATABASE_DB:-mayan}
      POSTGRES_PASSWORD: ${MAYAN_DATABASE_PASSWORD:-mayandbpass}
      POSTGRES_USER: ${MAYAN_DATABASE_USER:-mayan}
    image: postgres:10.6
    networks:
      - bridge
    ports:
      - "${MAYAN_DB_PORT}:5432"
    restart: unless-stopped
    volumes:
      - ${MAYAN_POSTGRES_VOLUME:-postgres}:/var/lib/postgresql/data

  redis:
    command:
      - redis-server
      - --appendonly
      - "no"
      - --databases
      - "2"
      - --maxmemory
      - "100mb"
      - --maxclients
      - "500"
      - --maxmemory-policy
      - "allkeys-lru"
      - --save
      - ""
      - --tcp-backlog
      - "256"
      - --requirepass
      - "${MAYAN_REDIS_PASSWORD:-mayanredispassword}"
    image: redis:5.0-alpine
    networks:
      - bridge
    restart: unless-stopped
    volumes:
      - ${MAYAN_REDIS_VOLUME:-redis}:/data

  # automation-api:
  #   build: ${MAYAN_AUTO_APP:-aapi}
  #   command: python manage.py runserver 0.0.0.0:8080
  #   networks:
  #     - bridge
  #   volumes:
  #    - ${MAYAN_AUTO_APP:-aapi}:/myCode
  #   ports:
  #    - "8000:8080"

volumes:
  app:
  postgres:
  aapi:
  redis:
